#include<bits/stdc++.h>
using namespace std;
#define lli long long int
#define ulli unsigned long long int
#define MOD 1000000007
lli solve(lli* arr,lli n,lli totalSum){//n^3
    if(totalSum&1){
        return 0;
    }
    lli niceSwaps=0;
    lli reqdSum= totalSum/2;
    for(lli i=0;i<n;i++){
        for(lli j=i+1;j<n;j++){
            swap(arr[i],arr[j]);
            lli preSum[n]={0};
            preSum[0]=arr[0];
            for(lli k=1;k<n;k++){
                preSum[k] = preSum[k-1] + arr[k];
            }
            for(lli k=0;k<n-1;k++){
                if(preSum[k] ==  reqdSum){
                    niceSwaps++;
//                    for(lli x=0;x<n;x++){
//                        cout<<arr[x]<<", ";
//                    }cout<<endl;
                    break;
                }
            }
            swap(arr[i],arr[j]);
        }
    }
    return niceSwaps;
}

lli lowerBound(lli *arr,lli key,lli n)
{
    lli start=0,end=n-1,ans=-1;
    while(start<=end)
    {
        lli mid=(start+end)/2;
        if(arr[mid]==key)
            return mid;
        else if(arr[mid]>key)
        {
            end=mid-1;
        }
        else
        {
            ans=mid;
            start=mid+1;
        }
    }
    return ans;

}

ulli solve2(lli* preSum,lli n,lli totalSum,lli* arr){//n
    if(totalSum&1){
        return 0;
    }
//    if(n==3){
//        return 2;
//    }
    lli reqdSum= totalSum/2;
    //cout<<"reqd sum is: "<<reqdSum<<endl;
    //find lower bound value of reqdSum in prefix array
    lli lb= lowerBound(preSum,reqdSum,n);
    //cout<<"lb is: "<<lb<<endl;
    if(preSum[lb] == reqdSum){
       // cout<<"lb is: "<<lb<<endl;
        //lli ans= arr[lb];
        return (lb*(lb+1)/2 + (n-lb)*(n-lb-1)/2);
    }
    ulli niceSwaps= n - arr[lb];
    return niceSwaps;
}


ulli solve3(lli n,lli totalSum){//n
    if(totalSum&1){
        return 0;
    }
//    if(n==3){
//        return 2;
//    }
    lli reqdSum= totalSum/2;
    lli x= (pow(4*totalSum+1,0.5)-1)/2;
    //cout<<"reqd  is: "<<reqdSum<<endl;
    //cout<<"x  is: "<<x<<endl;
    lli sumUptoX= x*(x+1)/2;

    if(sumUptoX == reqdSum){
       // cout<<"lb is: "<<lb<<endl;
        //lli ans= arr[lb];
        return (x*(x-1)/2 + (n-x)*(n-x-1)/2  + n-x);
    }
    ulli niceSwaps= n - x;
    return niceSwaps;
}



int main()
{
            lli test;   cin>>test;
            while(test--){
                 lli n;
                cin>>n;
                //solve(arr,n);
                //cout<<solve(arr,n,totalSum)<<endl;
                lli totalSum= (n*(n+1))/2;
                //cout<<solve2(preSum,n,totalSum,arr)<<endl;
                cout<<solve3(n,totalSum)<<endl;
            }



//            lli N= 100000;
//            lli arr[N];
//            lli preSum[N]={0};
//            //preSum[0]=arr[0];
//            preSum[0]=1;
//            arr[0]=1;
//            for(lli i=1;i<N;i++){
//                arr[i]=i+1;
//                preSum[i] = preSum[i-1] + arr[i];
//
//            }
//
////            for(lli k=0;k<N;k++){
////                cout<<preSum[k]<<", ";
////            }cout<<endl;
//
//            lli test;   cin>>test;
//            while(test--){
//                 lli n;
//                cin>>n;
//                //solve(arr,n);
//                //cout<<solve(arr,n,totalSum)<<endl;
//                lli totalSum= (n*(n+1))/2;
//                //cout<<solve2(preSum,n,totalSum,arr)<<endl;
//
//            }
}


